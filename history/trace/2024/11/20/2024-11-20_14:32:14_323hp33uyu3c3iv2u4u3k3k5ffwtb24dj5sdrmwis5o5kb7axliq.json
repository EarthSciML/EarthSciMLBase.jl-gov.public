{"id":"323hp33uyu3c3iv2u4u3k3k5ffwtb24dj5sdrmwis5o5kb7axliq","stamp":"2024-11-20T14:32:14.624831368Z","payload":{"op":"motion_cancel","note":"","args":{"id":"76"},"result":{"motion":{"opened_at":"2024-11-13T20:15:32.838410602Z","closed_at":"2024-11-20T14:32:14.622712377Z","id":"76","type":"concern","policy":"pmp-concern-policy","author":"","tracker_url":"https://github.com/EarthSciML/EarthSciMLBase.jl/issues/76","title":"Cannot Compose a System with Algebraic Equations","description":"If we try to compose two systems with equations that have the same time derivative of the same variable, `operator_compose() `will return an error unless both systems are pure differential/reaction rate systems. For the algebraic part, `operation(term)` will return an error because `term` cannot be of type `Int64`.\r\n\r\n```using EarthSciMLBase\r\nusing Catalyst\r\nusing ModelingToolkit\r\nusing ModelingToolkit: t_nounits, D_nounits\r\nt = t_nounits\r\nD = D_nounits\r\n\r\nstruct ChemistryCoupler sys end\r\nfunction Chemistry(;name=:chemistry, rxn_sys=false)\r\n    @variables k(t) \r\n    @parameters a0 = 1 \r\n    sys1 = NonlinearSystem([k ~ a0], [k], []; name=:rate)\r\n\r\n    function rate()\r\n        return sys1.k\r\n    end\r\n    rx_sys = @reaction_network rx begin\r\n        @species(\r\n            A(t) = 20, \r\n            B(t) = 0, \r\n        )\r\n\r\n        rate(), A --\u003e B\r\n    end\r\n    rxns = compose(rx_sys, sys1) \r\n    convert(ODESystem, complete(rxns); combinatoric_ratelaws=false, name=name,metadata=Dict(:coupletype=\u003eChemistryCoupler))\r\nend\r\nsys1 = Chemistry()\r\n\r\nstruct EmisCoupler sys end\r\nfunction Emis()\r\n    @variables x(t) \r\n    @parameters p \r\n    ODESystem([D(x) ~ 2p], t; name=:Emis,\r\n        metadata=Dict(:coupletype=\u003eEmisCoupler))\r\nend\r\n\r\nsys2 = Emis()\r\n\r\noperator_compose(sys1, sys2)","labels":["gov4git:managed"],"frozen":false,"closed":true,"cancelled":true,"archived":false,"score":{"attention":3},"ref_by":null,"ref_to":null}}}}
